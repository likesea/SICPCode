#lang racket
(define (square-list items)
  (map (lambda (x) (* x x)) items))
(define (square-list2 items)
  (define (square  x) (* x x))
  (define (iter things answer)
    (if (null? things)
         (reverse answer)
        (iter (cdr things)
              (cons (square (car things)) answer))))
  (iter items null))
